version: "3.9"

services:
  back:
    build:
      context: ../backend/djangoproject/
      dockerfile: Dockerfile
    environment:
      - DJANGO_DEBUG=True
      - DJANGO_FRONTEND_URL=http://xn--80aaorhk2b.xn--p1ai
      - DJANGO_BACKEND_URL=http://naletay.shop:8083
    networks:
      - naletay
    image: "naletay/back:v1"
    container_name: naletay_back_v1
    ports:
      - "80:8000"
    volumes:
      - ../backend/djangoproject:/usr/src/app
    depends_on:
        pgdb:
            condition: service_healthy

  email:
    build:
      context: ../email/emailservice/
      dockerfile: Dockerfile
    environment:
      - DJANGO_DEBUG=True
      - DJANGO_FRONTEND_URL=http://xn--80aaorhk2b.xn--p1ai
      - DJANGO_BACKEND_URL=http://naletay.shop:8083
    networks:
      - naletay
    image: "naletay/email:v1"
    container_name: naletay_email_v1
    ports:
      - "8083:8083"
    volumes:
      - ../email/emailservice:/usr/src/app

  pgdb:
    image: postgres:latest
    networks:
      - naletay
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=wacze000
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
    container_name: pgdb
    volumes:
      - ../backend/djangoproject/pgdb:/var/lib/postgresql/data/

  telega:
    build:
      context: ../telegram/mainbot/
      dockerfile: Dockerfile
    networks:
      - naletay
    image: "naletay/telega:v1"
    container_name: naletay_telega_v1
    ports:
      - "8085:8085"
    volumes:
      - ../telegram/mainbot:/usr/src/app

  nginx:
    build:
      context: ../backend/djangoproject/docker/nginx
      dockerfile: Dockerfile
    image: "naletay/nginx_proxy:v1"
    networks:
      - naletay
    volumes:
      - ./../backend/djangoproject/docker/nginx/:/etc/nginx/conf.d/:ro
    depends_on:
      - back
    ports:
      - "8010:8010"

  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    networks:
      - naletay
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka1
    networks:
      - naletay
    ports:
      - "9091:9091"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
    volumes:
      - ./data/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
  kafka2:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka2
    networks:
      - naletay
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      # KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9092
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
    volumes:
      - ./data/kafka2/data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  kafka3:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka3
    networks:
      - naletay
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 3
    volumes:
      - ./data/kafka3/data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    networks:
      - naletay
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19091"
    depends_on:
      - kafka1
      - kafka2
      - kafka3

networks:
  naletay:
    name: naletay
