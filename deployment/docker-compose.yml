version: "3.9"

services:
  back:
    build:
      context: ../backend/djangoproject/
      dockerfile: Dockerfile
    environment:
      - DJANGO_DEBUG=True
      - DJANGO_FRONTEND_URL=http://xn--80aaorhk2b.xn--p1ai
      - DJANGO_BACKEND_URL=http://naletay.shop:8083
    networks:
      - naletay
    image: "naletay/back:v1"
    container_name: naletay_back_v1
    ports:
      - "80:8000"
    volumes:
      - ../backend/djangoproject:/usr/src/app
    depends_on:
        pgdb:
            condition: service_healthy

  pgdb:
    image: postgres:latest
    networks:
      - naletay
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=wacze000
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
    container_name: pgdb
    volumes:
      - ../backend/djangoproject/pgdb:/var/lib/postgresql/data/

  #telega:
  #  build:
  #    context: ../telegram/mainbot/
  #    dockerfile: Dockerfile
  #  networks:
  #    - naletay
  #  image: "naletay/telega:v1"
  #  container_name: naletay_telega_v1
  #  ports:
  #    - "8085:8085"
  #  volumes:
  #    - ../telegram/mainbot:/usr/src/app

  nginx:
    build:
      context: ../backend/djangoproject/docker/nginx
      dockerfile: Dockerfile
    image: "naletay/nginx_proxy:v1"
    networks:
      - naletay
    volumes:
      - ./../backend/djangoproject/docker/nginx/:/etc/nginx/conf.d/:ro
    depends_on:
      - back
    ports:
      - "8010:8010"

networks:
  naletay:
    name: naletay
